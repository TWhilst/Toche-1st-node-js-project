pipeline {
    agent {
        label 'dev'
    }
    tools {
        nodejs 'NodeJS'
    }
    
    environment {
        NEXUS_VERSION = "nexus2"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "54.91.187.225:8081/nexus"
        NEXUS_REPO = "nodejs-app"
        NEXUS_CREDENTIAL = "nexus"
        NEXUS_NPM_REGISTRY_URL = "http://98.81.215.126:8081/nexus/content/repositories/nodejs-app/"
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main',
                credentialsId: 'Github',
                url: 'git@github.com:TWhilst/Toche-1st-node-js-project.git'
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'npm install'
            }
        }
        
        // stage('Increment Version') {
        //     steps {
        //         script {
        //             def packageInfo = readJSON file: 'package.json'
        //             def currentVersion = packageInfo.version.split('.')
        //             def newPatch = currentVersion[2].toInteger() + 1
        //             def newVersion = "${currentVersion[0]}.${currentVersion[1]}.${newPatch}"
        //             sh "npm version --no-git-tag-version ${newVersion}"
        //             println "Incremented version to: ${newVersion}"
        //         }
        //     }
        // }
        
        // stage('Package') {
        //     steps {
        //         sh 'zip -r app.zip /home/ec2-user/workspace/Node-js-app package.json node_modules'
        //     }
        // }
        
        // stage('Archive Artifacts') {
        //     steps {
        //         archiveArtifacts artifacts: 'app.zip'
        //     }
        // }
        
        stage('Package NPM') {
            steps {
                sh 'npm pack'
                script {
                    env.NPM_PACKAGE_TGZ = sh(script: 'ls *.tgz', returnStdout: true).trim()
                    println "Packaged NPM artifact: ${env.NPM_PACKAGE_TGZ}"
                }
            }
        }
        
        stage('Release') {
            steps {
                script {
                    def packageInfo = readJSON file: 'package.json'
                    env.ARTIFACT_VERSION = packageInfo.version
                    println "Artifact Version (package.json): ${env.ARTIFACT_VERSION}"
                    
                    nexusArtifactUploader(
                        nexusVersion: NEXUS_VERSION,
                        protocol: NEXUS_PROTOCOL,
                        nexusUrl: NEXUS_URL,
                        groupId: 'group-21',
                        version: "${env.ARTIFACT_VERSION}", 
                        repository: NEXUS_REPO,
                        credentialsId: NEXUS_CREDENTIAL,
                        artifacts: [
                            [artifactId: 'nodejs', classifier: '', file: "${env.NPM_PACKAGE_TGZ}", type: 'tgz']
                        ]
                    )
                }
            }
        }
        
    }